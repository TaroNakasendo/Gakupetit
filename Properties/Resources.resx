<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BitmapEffectsMessageCantOpenFile" xml:space="preserve">
    <value>Can't open the chosen file.</value>
  </data>
  <data name="BitmapEffectsMessageFileFormatError" xml:space="preserve">
    <value>Invalid file format.</value>
  </data>
  <data name="BitmapEffectsMessageOpenFileError" xml:space="preserve">
    <value>File open error</value>
  </data>
  <data name="Gakupetit" xml:space="preserve">
    <value>Gakupetit!</value>
  </data>
  <data name="MainCancel" xml:space="preserve">
    <value>[Cancel]                               : Abort sequential processing.</value>
  </data>
  <data name="MainConfirmMultipleFile" xml:space="preserve">
    <value>Multiple files are specified. Do you want to open these files as sequential processing mode?</value>
  </data>
  <data name="MainConfirmProcessing" xml:space="preserve">
    <value>Confirm sequential processing</value>
  </data>
  <data name="MainDragColor" xml:space="preserve">
    <value>Drag to get the color</value>
  </data>
  <data name="MainElapsedTime" xml:space="preserve">
    <value>Elapsed time : {0,4}ms</value>
  </data>
  <data name="MainExtention" xml:space="preserve">
    <value>Extension                             :</value>
  </data>
  <data name="MainFileNotFoundException" xml:space="preserve">
    <value>Can't find {0}. Do you want to skip this file and continue sequential processing?</value>
  </data>
  <data name="MainFrameColor" xml:space="preserve">
    <value>Frame color                         :</value>
  </data>
  <data name="MainFrameType" xml:space="preserve">
    <value>Frame type                          :</value>
  </data>
  <data name="MainImageFileMessage" xml:space="preserve">
    <value>Please specify image files.</value>
  </data>
  <data name="MainImageSize" xml:space="preserve">
    <value>Image size                           :</value>
  </data>
  <data name="MainMassageMultipleFile" xml:space="preserve">
    <value>The file will open in normal mode. If you want to open in sequential processing mode, select multiple image files.</value>
  </data>
  <data name="MainMessageTransparent" xml:space="preserve">
    <value>If you want to use transparent, please save as PNG instead of JPEG, and the output file size will increase.</value>
  </data>
  <data name="MainNo" xml:space="preserve">
    <value>[N     o]                                : Open dialog and modify settings.</value>
  </data>
  <data name="MainNowOnProcessing" xml:space="preserve">
    <value>Now on sequential processing. Dou you want to stop the sequential processing?</value>
  </data>
  <data name="MainOriginalImageFolder" xml:space="preserve">
    <value>Source image folder             :</value>
  </data>
  <data name="MainOutOfMemoryException" xml:space="preserve">
    <value>Failed to open {0}. Do you want to skip this file and continue sequential processing?</value>
  </data>
  <data name="MainPrefix" xml:space="preserve">
    <value>Prefix                                   :</value>
  </data>
  <data name="MainPrivacyPolicyTitle" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="MainPrivacyPoricyText" xml:space="preserve">
    <value>This application accesses the photo data specified by the user to process the photo. It will not be used or held for any other purposes.</value>
  </data>
  <data name="MainProcessed" xml:space="preserve">
    <value>{0} files were saved to '{1}'.</value>
  </data>
  <data name="MainProcImageFiles" xml:space="preserve">
    <value>These files are saved with the following settings.</value>
  </data>
  <data name="MainProcImageManyFiles" xml:space="preserve">
    <value>{0} files are saved with the following settings.</value>
  </data>
  <data name="MainRenumber" xml:space="preserve">
    <value>Renumber                           :</value>
  </data>
  <data name="MainResizeType" xml:space="preserve">
    <value>Resize type                          :</value>
  </data>
  <data name="MainSaveImageFolder" xml:space="preserve">
    <value>Destination image folder      :</value>
  </data>
  <data name="MainSingletonMessage" xml:space="preserve">
    <value>This software can't be launched multiple times.</value>
  </data>
  <data name="MainSpecifyMultipleFile" xml:space="preserve">
    <value>Sequential processing mode. Please specify multiple files.</value>
  </data>
  <data name="MainTitleMultipleFile" xml:space="preserve">
    <value>Multiple files were not selected.</value>
  </data>
  <data name="MainValue" xml:space="preserve">
    <value>Value                                   :</value>
  </data>
  <data name="MainYes" xml:space="preserve">
    <value>[Y  e  s]                                : Continue with these settings.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>NO</value>
  </data>
  <data name="SaveEx" xml:space="preserve">
    <value>Ex. : </value>
  </data>
  <data name="SaveFileCopyCheckMessage" xml:space="preserve">
    <value>Copy default 10 images for  User defined/Green back to {0}. Is it OK? After copy the files, you can edit the copied images.</value>
  </data>
  <data name="SaveFileCopyCheckTitle" xml:space="preserve">
    <value>Confirm for file copy</value>
  </data>
  <data name="SaveFileCopyErrorMessage" xml:space="preserve">
    <value>Can't copy the files. User defined/Green back images may be used. Choose another effect, then do it once again. ({0})</value>
  </data>
  <data name="SaveFIleCopyErrorTitle" xml:space="preserve">
    <value>File copy error</value>
  </data>
  <data name="SaveFileNameCheckMessage" xml:space="preserve">
    <value>The letter '{0}' can't apply for the file name. It was replaced to '_'.</value>
  </data>
  <data name="SaveFileNameCheckTitle" xml:space="preserve">
    <value>File name availability check</value>
  </data>
  <data name="SizeMode1" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="SizeMode2" xml:space="preserve">
    <value>from size list</value>
  </data>
  <data name="SizeMode3" xml:space="preserve">
    <value>from width</value>
  </data>
  <data name="SizeMode4" xml:space="preserve">
    <value>Specify manual</value>
  </data>
  <data name="SizeMode5" xml:space="preserve">
    <value>Square trimming</value>
  </data>
  <data name="SizeMode6" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>YES</value>
  </data>
</root>